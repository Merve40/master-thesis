{"version":3,"sources":["components/header.js","components/client.js","components/form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Row","className","style","backgroundColor","color","Col","idm","process","authenticate","web3","privateKey","ens","a","account","eth","accounts","privateKeyToAccount","fetch","address","method","mode","headers","response","json","data","status","error","createSignature","nonce","signature","setCookie","name","value","exp","expires","date","Date","setTime","toUTCString","document","cookie","hash","hashMessage","sign","IDMForm","useState","loading","setLoading","danger","showDanger","setError","setPrivateKey","setEns","trim","_privateKey","startsWith","_ens","isAuthenticated","result","console","decoded","DidJwt","decodeJWT","jwt","payload","window","location","replace","brokerUrl","Container","Form","Group","Label","Control","id","type","placeholder","onChange","e","target","InputGroup","Append","Text","sm","Button","variant","onClick","Spinner","animation","size","Alert","App","Web3","providers","WebsocketProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2717b6b.chunk.js","sourcesContent":["import React from 'react'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from \"react-bootstrap/Col\"\n\nconst Header = () => {\n    return (\n        <header>\n            <Row className=\"p-3\" style={{backgroundColor:\"blue\", color: \"ivory\"}}>\n                <Col> <h1>Decentralized Identity Management </h1>  </Col>\n            </Row>\n        </header>\n    )\n}\n\nexport default Header\n","const idm = process.env.REACT_APP_IDM;\n\n/**\n * Authenticates the ethereum account by performing a challenge-response.\n *\n * @param {web3} web3 instance\n * @param {string} privateKey\n * @param {string} ens (ethereum name service)\n * @returns {boolean, object} true if successful otherwise false, error or result\n */\nexport async function authenticate(web3, privateKey, ens) {\n  var account;\n\n  try {\n    account = web3.eth.accounts.privateKeyToAccount(privateKey);\n  } catch (error) {\n    return [false, \"Invalid private key\"];\n  }\n\n  // fetch a challenge from IDM server\n  var response = await fetch(`${idm}/challenge/${account.address}`, {\n    method: \"get\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  var data = await response.json();\n  if (response.status == 500) {\n    return [false, data.error];\n  }\n\n  var signature = await createSignature(web3, account, data.nonce);\n\n  response = await fetch(\n    `${idm}/authenticate?address=${account.address}&broker=${ens}&signature=${signature}`,\n    {\n      method: \"get\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  data = await response.json();\n  if (response.status == 500) {\n    return [false, data.error];\n  }\n  data.address = account.address;\n  return [true, data]; // data: jwt, brokerUrl\n}\n\nexport function setCookie(name, value, exp) {\n  var expires = \"\";\n  if (exp) {\n    var date = new Date();\n    date.setTime(exp);\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie =\n    name + \"=\" + (value || \"\") + expires + \"; SameSite=Lax; path=/\";\n}\n\n/**\n * Computes a new signature.\n * @param {int} nonce\n */\nasync function createSignature(web3, account, nonce) {\n  var hash = web3.eth.accounts.hashMessage(nonce);\n  return await account.sign(hash).signature;\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DidJwt from \"did-jwt\";\nimport { authenticate, setCookie } from \"./client\";\n\nconst IDMForm = ({ web3 }) => {\n    const [loading, setLoading] = useState(false);\n    const [danger, showDanger] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [privateKey, setPrivateKey] = useState(null);\n    const [ens, setEns] = useState(null);\n\n    async function onClick() {\n        setLoading(true);\n\n        // check inputs\n        if (privateKey.trim() === \"\" || ens.trim() === \"\") {\n            return;\n        }\n        var _privateKey = privateKey;\n        if (!privateKey.startsWith(\"0x\")) {\n            _privateKey = \"0x\" + privateKey;\n        }\n\n        var _ens = ens + \".eth\";\n        const [isAuthenticated, result] = await authenticate(\n            web3,\n            _privateKey,\n            _ens\n        );\n\n        setLoading(false);\n\n        if (!isAuthenticated) {\n            console.error(result);\n            setError(result);\n            showDanger(true);\n            return;\n        }\n\n        // set cookies\n        var decoded = DidJwt.decodeJWT(result.jwt);\n        setCookie(\"address\", result.address, decoded.payload.exp * 1000);\n        setCookie(\"privateKey\", privateKey, decoded.payload.exp * 1000);\n        setCookie(\"jwt\", result.jwt, decoded.payload.exp * 1000);\n\n        // navigate to broker\n        window.location.replace(result.brokerUrl);\n    }\n\n    return (\n        <Container className=\"mt-5\">\n            <p className=\"h4\">Please identify yourself:</p>\n            <Form className=\"mt-4\">\n                <Form.Group>\n                    <Form.Label>Private Key:</Form.Label>\n                    <Form.Control\n                        id=\"input_privkey\"\n                        type=\"text\"\n                        placeholder=\"Enter your private key\"\n                        onChange={(e) => setPrivateKey(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Broker Domain:</Form.Label>\n                    <InputGroup className=\"mb-3\">\n                        <Form.Control\n                            id=\"input_ens\"\n                            placeholder=\"ethereum name service (ens)\"\n                            onChange={(e) => setEns(e.target.value)}\n                        />\n                        <InputGroup.Append>\n                            <InputGroup.Text>.eth</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n\n                <Row className=\"mt-5\">\n                    <Col sm={3}>\n                        <Button variant=\"primary\" onClick={onClick}>\n                            {loading ? (\n                                <Spinner\n                                    className=\"mr-2\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                />\n                            ) : null}\n                            Login\n                        </Button>\n                    </Col>\n                    <Col sm={9}>\n                        {danger ? (\n                            <Alert className=\"ml-4\" variant=\"danger\">\n                                {error}\n                            </Alert>\n                        ) : null}\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n};\n\nexport default IDMForm;\n","import Header from \"./components/header\";\nimport Form from \"./components/form\";\nimport Web3 from \"web3\";\n\nfunction App() {\n  const web3 = new Web3(\n    new Web3.providers.WebsocketProvider(process.env.REACT_APP_WEB3)\n  );\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form web3={web3} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'web3/dist/web3.min.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}